apiVersion: v1
kind: ServiceAccount
metadata:
  name: dstoredemo
  # TODO: (optional) Update {project} to your project id.
  annotations:
    iam.gke.io/gcp-service-account: dstoredemo@{project}.iam.gserviceaccount.com

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dstoredemo
spec:
  selector:
    matchLabels:
      app: dstoredemo
  replicas: 3
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app: dstoredemo
    spec:
      # This sample uses GKE's Workload Identity to authenticate against GCP services.
      # 'dstoredemo' service account here is mapped to a GCP's IAM service account
      # that has access to Spanner and PubSub.
      # If you're not using Workload Identity, you can also use a service account key
      # and set GOOGLE_APPLICATION_CREDENTIALS environment variable. Uncomment below.
      serviceAccountName: dstoredemo
      initContainers:
      - image: gcr.io/google.com/cloudsdktool/cloud-sdk:358.0.0-alpine
        name: workload-identity-initcontainer
        command:
        - '/bin/bash'
        - '-c'
        - |
          curl -s -H 'Metadata-Flavor: Google' 'http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token' --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null || exit 1
      containers:
      - name: dstoredemo
        image: asia.gcr.io/mobingi-main/dstoredemo
        imagePullPolicy: Always
        # TODO: Update as needed.
        args: ["-db=projects/{project}/instances/{instance}/databases/{database}"]
        env:
        # Downward value to get pod IP. We'll use this as our dstore instance id.
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GET_HOSTS_FROM
          value: dns
        ports:
        - containerPort: 8080
